{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/getting-started/Step-by-step Guide",
    "result": {"data":{"site":{"siteMetadata":{"title":"Relay | daangn","docsLocation":"https://github.com/daangn/relay-kr.github.io/tree/main/content"}},"mdx":{"fields":{"id":"5a5ba0aa-2624-5cc1-a9bf-7facf3e087c2","title":"Step By Step Guide","slug":"/getting-started/Step-by-step Guide"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Step-by-step Guide\"), mdx(\"h2\", null, \"Step 1. Create React App\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# NPM\\nnpx create-react-app your-app-name\\n\\n# Yarn\\nyarn create react-app your-app-name\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# NPM\\ncd your-app-name\\nnpm start\\n\\n# Yarn\\ncd your-app-name\\nyarn start\\n\")), mdx(\"h2\", null, \"Step 2. Fetch GraphQL (Relay \\uC5C6\\uC774 fetch() \\uC0AC\\uC6A9)\"), mdx(\"h3\", null, \"2.1. GitHub GraphQL Authentication\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"# your-app-name/.env.local\\nREACT_APP_GITHUB_AUTH_TOKEN=<TOKEN>\\n\")), mdx(\"h3\", null, \"2.2. A fetchGraphQL Helper\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// your-app-name/src/fetchGraphQL.js\\nasync function fetchGraphQL(text, variables) {\\n    ...\\n\\n  // Fetch data from GitHub's GraphQL API:\\n  const response = await fetch('https://api.github.com/graphql', {\\n    method: 'POST',\\n    ...,\\n    body: JSON.stringify({\\n      query: text,\\n      variables,\\n    }),\\n  });\\n\\n  // Get the response as JSON\\n  return await response.json();\\n}\\n\\nexport default fetchGraphQL;\\n\")), mdx(\"h3\", null, \"2.3. Fetching GraphQL From React\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// your-app-name/src/App.js\\n...\\n\\nfunction App() {\\n  // We'll load the name of a repository, initially setting it to null\\n  const [name, setName] = useState(null);\\n\\n  // When the component mounts we'll fetch a repository name\\n  useEffect(() => {\\n    let isMounted = true;\\n    fetchGraphQL(`\\n      query RepositoryNameQuery {\\n        # feel free to change owner/name here\\n        repository(owner: \\\"facebook\\\" name: \\\"relay\\\") {\\n          name\\n        }\\n      }\\n    `).then(response => {\\n      // Avoid updating state if the component unmounted before the fetch completes\\n            // \\uB370\\uC774\\uD130 \\uD328\\uCE6D\\uC774 \\uC644\\uB8CC\\uB418\\uAE30 \\uC804 unMount \\uB418\\uB294 \\uACBD\\uC6B0 \\uCC98\\uB9AC\\n      if (!isMounted) {\\n        return;\\n      }\\n      const data = response.data;\\n      setName(data.repository.name);\\n    }).catch(error => {\\n      console.error(error);\\n    });\\n\\n    return () => {\\n      isMounted = false;\\n    };\\n  }, [fetchGraphQL]);\\n\\n  // Render \\\"Loading\\\" until the query completes\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n        <p>\\n          {name != null ? `Repository: ${name}` : \\\"Loading\\\"}\\n        </p>\\n      </header>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\")), mdx(\"h2\", null, \"Step 3. When To Use Relay (Relay \\uC0AC\\uC6A9\\uD574 \\uB370\\uC774\\uD130 \\uAC00\\uC838\\uC624\\uAE30)\"), mdx(\"p\", null, \"step2\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74, \\uC5B4\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC758 \\uADDC\\uBAA8\\uAC00 \\uCEE4\\uC9C0\\uB294 \\uC18D\\uB3C4\\uC640 \\uD06C\\uAE30\\uC5D0 \\uB300\\uC751\\uD558\\uAE30 \\uC5B4\\uB824\\uC6CC\\uC9C4\\uB2E4.\"), mdx(\"p\", null, \"\\uC774 \\uB54C Relay\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uBE60\\uB974\\uACE0 \\uBBFF\\uC744 \\uC218 \\uC788\\uB294 \\uBC29\\uC2DD\\uC73C\\uB85C \\uC774\\uC5D0 \\uB300\\uC751\\uD560 \\uC218 \\uC788\\uB294\\uB370, \\uC774\\uC720\\uB294 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"GraphQL \\uD504\\uB798\\uADF8\\uBA3C\\uD2B8, \\uB370\\uC774\\uD130 \\uC77C\\uAD00\\uC131, mutations\\uC744 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0 \\uC704\\uCE58\\uC2DC\\uCF1C \\uB370\\uC774\\uD130 \\uC758\\uC874\\uC131\\uC744 \\uBAA8\\uC544\\uB193\\uAE30 (colocating)\")), mdx(\"h2\", null, \"Step 4. Adding Relay To Our Project\"), mdx(\"p\", null, \"Relay\\uB294 3\\uAC00\\uC9C0 \\uD575\\uC2EC\\uC73C\\uB85C \\uC774\\uB8E8\\uC5B4\\uC838\\uC788\\uB2E4.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"relay-compiler\"), \" : \\uCEF4\\uD30C\\uC77C\\uB7EC (\\uBE4C\\uB4DC \\uD0C0\\uC784\\uC5D0 \\uC0AC\\uC6A9\\uB428)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"relay-runtime\"), \" : \\uCF54\\uC5B4 \\uB7F0\\uD0C0\\uC784 (React \\uCE5C\\uD654\\uC801)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-relay\"), \" : React integration layer\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# NPM Users\\nnpm install --save relay-runtime react-relay\\nnpm install --save-dev relay-compiler babel-plugin-relay\\n\\n# Yarn Users\\nyarn add relay-runtime react-relay\\nyarn add --dev relay-compiler babel-plugin-relay\\n\")), mdx(\"h3\", null, \"4.1. Configure Relay Compiler\"), mdx(\"p\", null, \"Relay example app\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".graphql\"), \" \\uC2A4\\uD0A4\\uB9C8 \\uCE74\\uD53C\\uB97C \\uB2E4\\uC6B4\\uB85C\\uB4DC \\uBC1B\\uAE30 \\uC704\\uD574\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cd your-app-name\\ncurl https://raw.githubusercontent.com/relayjs/relay-examples/main/issue-tracker/schema/schema.graphql > schema.graphql\\n\")), mdx(\"p\", null, \"package.json \\uC124\\uC815\\uC740 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"// your-app-name/package.json\\n{\\n  ...\\n  \\\"scripts\\\": {\\n    ...\\n    \\\"start\\\": \\\"yarn run relay && react-scripts start\\\",\\n    \\\"build\\\": \\\"yarn run relay && react-scripts build\\\",\\n    \\\"relay\\\": \\\"yarn run relay-compiler $@\\\"\\n    ...\\n  },\\n  \\\"relay\\\": {\\n    \\\"src\\\": \\\"./src/\\\",\\n    \\\"schema\\\": \\\"./schema.graphql\\\"\\n  }\\n  ...\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cd your-app-name\\nyarn start\\n\")), mdx(\"p\", null, \"\\uC5EC\\uAE30\\uC11C, GraphQL\\uC744 \\uC0AC\\uC6A9\\uD558\\uAC8C \\uB418\\uBA74 Relay\\uB294 \\uC774\\uB97C \\uAC10\\uC9C0\\uD558\\uC5EC \\uD574\\uB2F9 \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0\\uC11C \\uC791\\uC131\\uD55C \\uCFFC\\uB9AC\\uB97C \\uB098\\uD0C0\\uB0B4\\uB294 \\uCF54\\uB4DC\\uB97C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"your-app-name/src/__generated__/\"), \" \\uC5D0 \\uC0DD\\uC131\\uD55C\\uB2E4.\"), mdx(\"h3\", null, \"4.2. Configure Relay Runtime\"), mdx(\"p\", null, \"\\uCEF4\\uD30C\\uC77C\\uB7EC \\uC124\\uC815\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC73C\\uB2C8 \\uB7F0\\uD0C0\\uC784\\uC744 \\uC138\\uD305\\uD560 \\uC218 \\uC788\\uB294\\uB370, \\uC774\\uB294 Relay\\uC5D0\\uAC8C \\uC6B0\\uB9AC\\uC758 GraphQL \\uC11C\\uBC84\\uC640 \\uC5B4\\uB5BB\\uAC8C \\uC5F0\\uACB0\\uD560 \\uAC83\\uC778\\uC9C0\\uC5D0 \\uB300\\uD574 \\uC54C\\uB824\\uC8FC\\uB294 \\uAC83\\uACFC \\uAC19\\uB2E4.\"), mdx(\"p\", null, \"\\uC704\\uC758 \\uCF54\\uB4DC\\uB97C \\uB3D9\\uC77C\\uD558\\uAC8C \\uC0AC\\uC6A9\\uD558\\uB418, \\uCD94\\uAC00\\uC801\\uC73C\\uB85C \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Relay Environment\"), \" \\uB97C \\uC815\\uC758\\uD55C\\uB2E4. \\uC774\\uB294 \\uC11C\\uBC84 (Relay Network) \\uC5D0 \\uC800\\uC7A5\\uB41C \\uCE90\\uC2DC\\uB97C \\uC5B4\\uB5BB\\uAC8C \\uD65C\\uC6A9\\uD560 \\uAC83\\uC778\\uC9C0\\uC5D0 \\uB300\\uD574 \\uCEA1\\uC290\\uD654\\uD558\\uB294 \\uAC83\\uC744 \\uC758\\uBBF8\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// your-app-name/src/RelayEnvironment.js\\nimport {Environment, Network, RecordSource, Store} from 'relay-runtime';\\nimport fetchGraphQL from './fetchGraphQL';\\n\\n// Relay passes a \\\"params\\\" object with the query name and text. So we define a helper function\\n// to call our fetchGraphQL utility with params.text.\\nasync function fetchRelay(params, variables) {\\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\\n  return fetchGraphQL(params.text, variables);\\n}\\n\\n// Export a singleton instance of Relay Environment configured with our network function:\\nexport default new Environment({\\n  network: Network.create(fetchRelay),\\n  store: new Store(new RecordSource()),\\n});\\n\")), mdx(\"h2\", null, \"Step 5. Fetching a Query With Relay\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"...\\nimport fetchGraphQL from './fetchGraphQL';\\nimport graphql from 'babel-plugin-relay/macro';\\nimport {\\n  RelayEnvironmentProvider,\\n  loadQuery,\\n  usePreloadedQuery,\\n} from 'react-relay/hooks';\\nimport RelayEnvironment from './RelayEnvironment';\\n\\nconst { Suspense } = React;\\n\\n// Define a query\\nconst RepositoryNameQuery = graphql`\\n  query AppRepositoryNameQuery {\\n    repository(owner: \\\"facebook\\\", name: \\\"relay\\\") {\\n      name\\n    }\\n  }\\n`;\\n\\n// \\uC571\\uC774 \\uC2DC\\uC791\\uD558\\uC790\\uB9C8\\uC790 \\uCFFC\\uB9AC\\uB97C \\uC989\\uC2DC \\uB85C\\uB4DC\\uD55C\\uB2E4.\\n// \\uC2E4\\uC81C \\uC571\\uC5D0\\uC11C\\uB294 \\uB77C\\uC6B0\\uD305 configuration\\uC5D0 \\uC774\\uB97C \\uC124\\uC815\\uD558\\uACE0, \\uC0C8\\uB85C\\uC6B4 route\\uB85C \\uC774\\uB3D9 \\uC2DC \\uB370\\uC774\\uD130\\uB97C \\uD504\\uB9AC-\\uB85C\\uB4DC\\uD55C\\uB2E4.\\nconst preloadedQuery = loadQuery(RelayEnvironment, RepositoryNameQuery, {\\n  /* query variables */\\n});\\n\\n// \\uD504\\uB9AC\\uB85C\\uB4DC\\uB41C \\uCFFC\\uB9AC\\uB97C \\uC77D\\uB294 \\uC774\\uB108 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB294 `usePreloadedQuery`\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\\n// - \\uCFFC\\uB9AC\\uAC00 \\uC2E4\\uD589 \\uC644\\uB8CC\\uB418\\uBA74, \\uCFFC\\uB9AC\\uC758 \\uACB0\\uACFC\\uB97C \\uB9AC\\uD134\\uD55C\\uB2E4.\\n// - \\uCFFC\\uB9AC\\uAC00 \\uC544\\uC9C1 \\uD39C\\uB529 \\uC911\\uC774\\uBA74, Suspend \\uD55C\\uB2E4. \\uC774\\uB294 \\uBD80\\uBAA8 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uC911 \\uAC00\\uC7A5 \\uAC00\\uAE4C\\uC774 \\uC704\\uCE58\\uD55C fallback\\uC5D0 \\uADFC\\uAC70\\uD55C\\uB2E4.\\n// - \\uCFFC\\uB9AC\\uAC00 (\\uB370\\uC774\\uD130 \\uD328\\uCE6D\\uC744) \\uC2E4\\uD328\\uD558\\uBA74, \\uC2E4\\uD328 \\uC5D0\\uB7EC\\uB97C \\uB744\\uC6B4\\uB2E4.\\nfunction App(props) {\\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n        <p>{data.repository.name}</p>\\n      </header>\\n    </div>\\n  );\\n}\\n\\n// \\uC704 App \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB294 \\uC5B4\\uB5BB\\uAC8C Relay Environment\\uC5D0 \\uC811\\uADFC\\uD560\\uC9C0\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uAC00 \\uC788\\uC5B4\\uC57C \\uD558\\uACE0,\\n// Suspend \\uACBD\\uC6B0\\uB97C \\uC704\\uD55C fallback\\uC744 \\uC124\\uC815\\uD574\\uC57C \\uD55C\\uB2E4.\\nfunction AppRoot(props) {\\n  return (\\n    <RelayEnvironmentProvider environment={RelayEnvironment}>\\n      <Suspense fallback={'Loading...'}>\\n        <App preloadedQuery={preloadedQuery} />\\n      </Suspense>\\n    </RelayEnvironmentProvider>\\n  );\\n}\\n\\nexport default AppRoot;\\n\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"RepositoryNameQuery\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCFFC\\uB9AC\\uB97C \\uC815\\uC758\\uD55C\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"preloadQuery\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC804\\uC5D0 \\uC815\\uC758\\uD55C RelayEnvironment\\uC640 RepositoryNameQuery, \\uCFFC\\uB9AC \\uBCC0\\uC218(args)\\uB97C \\uC804\\uB2EC\\uD55C\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"AppRoot\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<RelayEnvironmentProvider>\"), \" \\uC740 \\uD604\\uC7AC Relay Environment \\uC778\\uC2A4\\uD134\\uC2A4\\uC640\\uC758 \\uC18C\\uD1B5 \\uBC29\\uC2DD\\uC744 child \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0 \\uC804\\uB2EC\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Suspense>\"), \" \\uB294 child\\uAC00 suspend\\uD560 \\uACBD\\uC6B0\\uC758 fallback\\uC744 \\uC9C0\\uC815\\uD55C\\uB2E4.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#step-by-step-guide","title":"Step-by-step Guide","items":[{"url":"#step-1-create-react-app","title":"Step 1. Create React App"},{"url":"#step-2-fetch-graphql-relay-없이-fetch-사용","title":"Step 2. Fetch GraphQL (Relay 없이 fetch() 사용)","items":[{"url":"#21-github-graphql-authentication","title":"2.1. GitHub GraphQL Authentication"},{"url":"#22-a-fetchgraphql-helper","title":"2.2. A fetchGraphQL Helper"},{"url":"#23-fetching-graphql-from-react","title":"2.3. Fetching GraphQL From React"}]},{"url":"#step-3-when-to-use-relay-relay-사용해-데이터-가져오기","title":"Step 3. When To Use Relay (Relay 사용해 데이터 가져오기)"},{"url":"#step-4-adding-relay-to-our-project","title":"Step 4. Adding Relay To Our Project","items":[{"url":"#41-configure-relay-compiler","title":"4.1. Configure Relay Compiler"},{"url":"#42-configure-relay-runtime","title":"4.2. Configure Relay Runtime"}]},{"url":"#step-5-fetching-a-query-with-relay","title":"Step 5. Fetching a Query With Relay"}]}]},"parent":{"relativePath":"getting-started/Step-by-step Guide.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics","title":"Rendering Data Basics"}}},{"node":{"fields":{"slug":"/principles-and-architecture","title":"Principles And Architecture"}}},{"node":{"fields":{"slug":"/a-guided-tour","title":"A Guided Tour"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in GraphQL","title":"Thinking In Graph QL"}}},{"node":{"fields":{"slug":"/","title":"Relay"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in Relay","title":"Thinking In Relay"}}},{"node":{"fields":{"slug":"/getting-started/Step-by-step Guide","title":"Step By Step Guide"}}},{"node":{"fields":{"slug":"/getting-started/Introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 1)","title":"Refreshing And Refetching Part 1"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 2)","title":"Refreshing And Refetching Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reuse Cached Data For Rendering","title":"Reuse Cached Data For Rendering"}}},{"node":{"fields":{"slug":"/a-guided-tour/Rendering List Data and Pagination (part 2)","title":"Rendering List Data And Pagination Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reusing Cached Data for Rendering (part 2)","title":"Reusing Cached Data For Rendering Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/managing-data-outside-react","title":"Managing Data Outside React"}}},{"node":{"fields":{"slug":"/a-guided-tour/Updating Data","title":"Updating Data"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Queries","title":"Queries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Variables","title":"Variables"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Fragments","title":"Fragments"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/error-states-with-error-boundaries","title":"Error States With Error Boundaries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/relay-environment","title":"Relay Environment"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/loading-state-with-suspense","title":"Loading State With Suspense"}}}]}},"pageContext":{"id":"5a5ba0aa-2624-5cc1-a9bf-7facf3e087c2"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}