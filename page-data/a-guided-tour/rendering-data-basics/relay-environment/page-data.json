{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/a-guided-tour/rendering-data-basics/relay-environment",
    "result": {"data":{"site":{"siteMetadata":{"title":"Relay | daangn","docsLocation":"https://github.com/daangn/relay-kr/tree/main/content"}},"mdx":{"fields":{"id":"4b609a89-3891-5601-bace-a2e771256776","title":"Relay Environment","slug":"/a-guided-tour/rendering-data-basics/relay-environment"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Relay Environment Provider\"), mdx(\"p\", null, \"Relay \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uB80C\\uB354\\uB9C1\\uD558\\uAE30 \\uC704\\uD574 \\uC5B4\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC758 root \\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RelayEnvironmentProvider\"), \" \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC120\\uC5B8\\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const {RelayEnvironmentProvider} = require('react-relay');\\nconst Environment = require('MyEnvironment');\\n\\nfunction Root() {\\n  return (\\n    <RelayEnvironmentProvider environment={Environment}>\\n      {/*... */}\\n    </RelayEnvironmentProvider>\\n  );\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RelayEnvironmentProvider\"), \" \\uB294 \\uBAA8\\uB4E0 \\uC790\\uC2DD Relay \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uACE0 Relay \\uB97C \\uC0AC\\uC6A9\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uD658\\uACBD\\uC744 \\uC81C\\uACF5\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"Relay Environment \\uC811\\uADFC\\uD558\\uAE30\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RelayEnvironmentProvider\"), \" \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C relay \\uD658\\uACBD\\uC5D0 \\uC811\\uADFC\\uD558\\uAE30 \\uC704\\uD574 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useRelayEnvironment\"), \" Hook\\uC744 \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"jsx\",\n    \"jsx\": true\n  }, \"const {useRelayEnvironment} = require('react-relay');\\n\\nfunction UserComponent(props: Props) {\\n  const environment = useRelayEnvironment();\\n\\n  const handler = useCallback(() => {\\n      // relay \\uD658\\uACBD\\uC744 \\uC694\\uAD6C\\uD558\\uB294 \\uD568\\uC218\\uC5D0\\uAC8C environment \\uC744 \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uB2E4\\n      commitMutation(environment, ...);\\n  }, [environment])\\n\\n  return (...);\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#relay-environment-provider","title":"Relay Environment Provider"},{"url":"#relay-environment-접근하기","title":"Relay Environment 접근하기"}]},"parent":{"relativePath":"a-guided-tour/rendering-data-basics/relay-environment.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics","title":"Rendering Data Basics"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/principles-and-architecture","title":"Principles And Architecture"}}},{"node":{"fields":{"slug":"/a-guided-tour","title":"A Guided Tour"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 1)","title":"Refreshing And Refetching Part 1"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 2)","title":"Refreshing And Refetching Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Rendering List Data and Pagination (part 2)","title":"Rendering List Data And Pagination Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reuse Cached Data For Rendering","title":"Reuse Cached Data For Rendering"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reusing Cached Data for Rendering (part 2)","title":"Reusing Cached Data For Rendering Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/managing-data-outside-react","title":"Managing Data Outside React"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Queries","title":"Queries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Fragments","title":"Fragments"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Variables","title":"Variables"}}},{"node":{"fields":{"slug":"/a-guided-tour/Updating Data","title":"Updating Data"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/loading-state-with-suspense","title":"Loading State With Suspense"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/error-states-with-error-boundaries","title":"Error States With Error Boundaries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/relay-environment","title":"Relay Environment"}}},{"node":{"fields":{"slug":"/getting-started/Step-by-step Guide","title":"Step By Step Guide"}}},{"node":{"fields":{"slug":"/","title":"Relay"}}},{"node":{"fields":{"slug":"/getting-started/Introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in Relay","title":"Thinking In Relay"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in GraphQL","title":"Thinking In Graph QL"}}}]}},"pageContext":{"id":"4b609a89-3891-5601-bace-a2e771256776"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}