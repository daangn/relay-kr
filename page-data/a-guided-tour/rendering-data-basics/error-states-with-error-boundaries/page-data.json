{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/a-guided-tour/rendering-data-basics/error-states-with-error-boundaries",
    "result": {"data":{"site":{"siteMetadata":{"title":"Relay | daangn","docsLocation":"https://github.com/daangn/relay-kr.github.io/tree/main/content"}},"mdx":{"fields":{"id":"f89470bc-ceea-56db-854a-2ef99efde8f2","title":"Error States With Error Boundaries","slug":"/a-guided-tour/rendering-data-basics/error-states-with-error-boundaries"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uC5D0\\uB7EC \\uC0C1\\uD0DC\\uC640 ErrorBoundaries\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ErrorBoundary\"), \" \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uB80C\\uB354\\uB9C1 \\uC911 \\uBC1C\\uC0DD\\uD558\\uB294 \\uC624\\uB958\\uB97C \\uD3EC\\uCC29\\uD558\\uACE0 \\uBC1C\\uC0DD \\uC2DC fallback \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC624\\uB958 UI\\uB85C \\uB80C\\uB354\\uB9C1\\uD560 \\uC218 \\uC788\\uB2E4. \"), mdx(\"p\", null, \"\\uC791\\uB3D9 \\uBC29\\uC2DD\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Suspense\"), \" \\uAC00 \\uC791\\uB3D9\\uD558\\uB294 \\uBC29\\uC2DD\\uACFC \\uC720\\uC0AC\\uD558\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ErrorBoundary\"), \" \\uB85C \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uD2B8\\uB9AC\\uB97C \\uAC10\\uC2FC \\uB4A4 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC744 \\uB54C\\uC758 \\uC774\\uBCA4\\uD2B8 \\uCC98\\uB9AC\\uB97C \\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ErrorBoundary\"), \" \\uB294 \\uB2E8\\uC21C\\uD788 \\uC815\\uC801 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getDerivedStateFromError\"), \" \\uBA54\\uC11C\\uB4DC\\uB97C \\uAD6C\\uD604\\uD558\\uB294 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC774\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"jsx\",\n    \"jsx\": true\n  }, \"const React = require('React');\\n\\ntype State = {error: ?Error};\\n\\nclass ErrorBoundary extends React.Component<Props, State> {\\n  static getDerivedStateFromError(error): State {\\n    // Set some state derived from the caught error\\n    return {error: error};\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const ErrorBoundary = require('ErrorBoundary');\\nconst React = require('React');\\n\\nconst MainContent = require('./MainContent.react');\\nconst SecondaryContent = require('./SecondaryContent.react');\\n\\nfunction App() {\\n    // MainContent \\uB610\\uB294 Secondary Content \\uC5D0\\uC11C \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC744 \\uB54C fallback \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uB80C\\uB354\\uB9C1\\uD55C\\uB2E4.\\n    <ErrorBoundary fallback={error => <ErrorUI error={error} />}>\\n      <MainContent />\\n      <SecondaryContent />\\n    </ErrorBoundary>\\n  );\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ErrorBoundary\"), \" \\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uAC10\\uC2F8\\uACE0, \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC744 \\uB54C fallback \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uB80C\\uB354\\uB9C1\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ErrorBoundary\"), \" \\uB85C \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uAC10\\uC30C\\uC744 \\uB54C \\uC5D0\\uB7EC UI \\uB97C \\uC138\\uBD84\\uD654\\uD574\\uC11C \\uC81C\\uC5B4\\uD560 \\uC218 \\uC788\\uB2E4. \\uC608\\uB97C \\uB4E4\\uC5B4 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MainContent\"), \" \\uB610\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SecondaryContent\"), \" \\uC5B4\\uB290 \\uD55C \\uCABD\\uC5D0\\uC11C\\uB9CC \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD574\\uB3C4 fallback \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uB80C\\uB354\\uB9C1\\uD55C\\uB2E4.\")), mdx(\"h2\", null, \"\\uC5D0\\uB7EC \\uBC1C\\uC0DD \\uD6C4 \\uC7AC\\uC2DC\\uB3C4\"), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"useQueryLoader\"), \" \\uB610\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"loadQuery\"), \" \\uC0AC\\uC6A9\\uD558\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useQueryLoader\"), \" \\uB610\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"loadQuery\"), \" \\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC query \\uB97C fetch \\uD560 \\uB54C \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD55C\\uB2E4\\uBA74, \\uC7AC\\uC2DC\\uB3C4\\uB97C \\uD560 \\uB54C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"loadQuery\"), \" \\uB97C \\uB2E4\\uC2DC \\uD638\\uCD9C\\uD558\\uACE0 \\uC0C8\\uB85C\\uC6B4 query reference \\uB97C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"usePreloadedQuery\"), \" \\uC5D0 \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"jsx\",\n    \"jsx\": true\n  }, \"const React = require('React');\\n\\nclass ErrorBoundaryWithRetry extends React.Component<Props, State> {\\n  state = {error: null};\\n\\n  static getDerivedStateFromError(error): State {\\n    return {error: error};\\n  }\\n\\n  _retry = () => {\\n    // loadQuery \\uD638\\uCD9C\\uC744 \\uC885\\uB8CC\\uD558\\uBA74\\uC11C \\uC0C8\\uB85C\\uC6B4 queryRef \\uB97C \\uB80C\\uB354\\uB9C1\\uD55C\\uB2E4.\\n    this.props.onRetry();\\n    this.setState({\\n      // \\uC5D0\\uB7EC \\uCD08\\uAE30\\uD654\\n      error: null,\\n    });\\n  }\\n\\n  render() {\\n    const {children, fallback} = this.props;\\n    const {error} = this.state;\\n    if (error) {\\n      if (typeof fallback === 'function') {\\n        return fallback({error, retry: this._retry});\\n      }\\n      return fallback;\\n    }\\n    return children;\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const ErrorBoundaryWithRetry = require('ErrorBoundaryWithRetry');\\nconst React = require('React');\\n\\nconst MainContent = require('./MainContent.react');\\n\\nconst query = require('__generated__/MainContentQuery.graphql');\\n\\nfunction App(props) {\\n  // initialQueryRef \\uB294 router \\uB4F1\\uC73C\\uB85C \\uBC1B\\uC544\\uC628\\uB2E4. \\n  const [queryRef, loadQuery] = useQueryLoader(query, props.initialQueryRef);\\n\\n  return (\\n    <ErrorBoundaryWithRetry\\n      // retry \\uC5D0\\uC11C loadQuery \\uD638\\uCD9C\\uD560 \\uB54C, useQueryLoader \\uB85C\\uBD80\\uD130 \\uC0C8\\uB85C\\uC6B4 queryRef \\uB97C \\uC5C5\\uB370\\uC774\\uD2B8\\uD55C\\uB2E4.\\n      onRetry={() => loadQuery(/* ... */)}\\n      fallback={({error, retry}) =>\\n        <>\\n          <ErrorUI error={error} />\\n          {/* ErrorBoundary \\uAC00 \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB85C \\uAC10\\uC2F8\\uACE0 \\uC788\\uB294 queryComponent \\uB97C \\uB9AC\\uB80C\\uB354\\uB9C1\\uD560 \\uB54C \\uC0AC\\uC6A9\\uD558\\uB294 \\uBC84\\uD2BC */}\\n          <Button onPress={retry}>Retry</Button>\\n        </>\\n      }>\\n      {/* loadQuery \\uB97C \\uB2E4\\uC2DC \\uD638\\uCD9C\\uD588\\uC744 \\uB54C queryRef \\uAC12\\uC744 \\uAC31\\uC2E0\\uD55C\\uB2E4.*/}\\n      <MainContent queryRef={queryRef} />\\n    </ErrorBoundaryWithRetry>\\n  );\\n}\\n\\nfunction MainContent(props) {\\n  const data = usePreloadedQuery(\\n    graphql`...`,\\n    props.queryRef\\n  );\\n\\n  return (/* ... */);\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"retry\"), \" \\uB97C \\uD638\\uCD9C\\uD558\\uBA74 error \\uB97C \\uCD08\\uAE30\\uD654\\uD558\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"loadQuery\"), \" \\uB97C \\uB2E4\\uC2DC \\uD638\\uCD9C\\uD55C\\uB2E4. \\uC774\\uD6C4 query \\uB97C \\uB2E4\\uC2DC fetch \\uD558\\uC5EC \\uC0C8\\uB85C\\uC6B4 query reference \\uB97C \\uAC00\\uC838\\uC624\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"usePreloadedQuery\"), \" \\uB85C \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704 \\uCF54\\uB4DC\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ErrorBoundaryWithRetry\"), \" \\uB294 error \\uB97C \\uCD08\\uAE30\\uD654 \\uD55C \\uB4A4 query \\uB97C \\uB2E4\\uC2DC \\uBD88\\uB7EC\\uC640 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"usePreloadedQuery\"), \" \\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0 \\uC0C8\\uB85C\\uC6B4 query reference \\uB97C \\uC804\\uB2EC\\uD558\\uC5EC \\uB2E4\\uC2DC \\uB80C\\uB354\\uB9C1 \\uD560 \\uC218 \\uC788\\uB3C4\\uB85D retry \\uD568\\uC218\\uB97C \\uC81C\\uACF5\\uD55C\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uB2F9 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB294 \\uC0C8\\uB85C\\uC6B4 query reference \\uB97C \\uC0AC\\uC6A9\\uD558\\uACE0 \\uD544\\uC694\\uD55C \\uACBD\\uC6B0\\uC5D0\\uB294 \\uB124\\uD2B8\\uC6CC\\uD06C \\uC694\\uCCAD\\uC744 suspend \\uD55C\\uB2E4.\")), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"useLazyLoadQuery\"), \" \\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uACBD\\uC6B0\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useLazyLoadQuery\"), \" \\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC query \\uB97C fetch \\uD560 \\uB54C \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD558\\uACE0 \\uC7AC\\uC2DC\\uB3C4\\uB97C \\uD558\\uB824\\uACE0 \\uD55C\\uB2E4\\uBA74, \"), mdx(\"p\", null, \"query \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C re-mount \\uD558\\uACE0 \\uC0C8\\uB85C\\uC6B4 fetchKey \\uB97C props \\uB85C \\uC804\\uB2EC\\uD558\\uBA74\\uC11C query \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uB2E4\\uC2DC \\uD3C9\\uAC00\\uD560 \\uC218 \\uC788\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"jsx\",\n    \"jsx\": true\n  }, \"const React = require('React');\\n\\nclass ErrorBoundaryWithRetry extends React.Component<Props, State> {\\n  state = {error: null, fetchKey: 0};\\n\\n  static getDerivedStateFromError(error): State {\\n    return {error: error, fetchKey: 0};\\n  }\\n\\n  _retry = () => {\\n    this.setState(prev => ({\\n      // \\uC5D0\\uB7EC \\uCD08\\uAE30\\uD654\\n      error: null,\\n      // useLazyLoadQuery \\uB97C \\uC774\\uC6A9\\uD55C query \\uC758 \\uC7AC\\uD3C9\\uAC00\\uB97C \\uC704\\uD574 \\uAC12\\uC744 \\uC99D\\uAC00\\uC2DC\\uD0A8\\uB2E4.\\n      fetchKey: prev.fetchKey + 1,\\n    }));\\n  }\\n\\n  render() {\\n    const {children, fallback} = this.props;\\n    const {error, fetchKey} = this.state;\\n    if (error) {\\n      if (typeof fallback === 'function') {\\n        return fallback({error, retry: this._retry});\\n      }\\n      return fallback;\\n    }\\n    return children({fetchKey});\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const ErrorBoundaryWithRetry = require('ErrorBoundaryWithRetry');\\nconst React = require('React');\\n\\nconst MainContent = require('./MainContent.react');\\n\\nfunction App() {\\n  return (\\n    <ErrorBoundaryWithRetry\\n      fallback={({error, retry}) =>\\n        <>\\n          <ErrorUI error={error} />\\n            {/* ErrorBoundary \\uAC00 \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB85C \\uAC10\\uC2F8\\uACE0 \\uC788\\uB294 queryComponent \\uB97C \\uB9AC\\uB80C\\uB354\\uB9C1\\uD560 \\uB54C \\uC0AC\\uC6A9\\uD558\\uB294 \\uBC84\\uD2BC */}\\n            <Button onPress={retry}>Retry</Button>\\n        </>\\n      }>\\n      {({fetchKey}) => {\\n          {/* loadQuery \\uB97C \\uB2E4\\uC2DC \\uD638\\uCD9C\\uD588\\uC744 \\uB54C fetchKey \\uAC12\\uC744 \\uAC31\\uC2E0\\uD55C\\uB2E4.*/}\\n          return <MainContent fetchKey={fetchKey} />;\\n      }}\\n    </ErrorBoundaryWithRetry>\\n  );\\n}\\n\\nfunction MainContent(props) {\\n  const data = useLazyLoadQuery<AppQuery>(\\n      graphql`\\n        query AppQuery($id: ID!) {\\n          user(id: $id) {\\n            name\\n          }\\n        }\\n      `,\\n      {id: 4},\\n      {fetchKey: props.fetchKey},\\n  );\\n\\n  return (/* ... */);\\n}\\n\")), mdx(\"p\", null, \"retry \\uB97C \\uD638\\uCD9C\\uD558\\uBA74 error \\uB97C \\uCD08\\uAE30\\uD654\\uD558\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetchKey\"), \" \\uC758 \\uAC12\\uC744 1 \\uC99D\\uAC00\\uC2DC\\uCF1C\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useLazyLoadQuery\"), \" \\uC5D0 \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \"), mdx(\"p\", null, \"\\uC774 \\uACBD\\uC6B0 \\uC0C8 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetchKey\"), \" \\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useLazyLoadQuery\"), \" \\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uB9AC\\uB80C\\uB354\\uB9C1\\uD574\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useLazyLoadQuery\"), \" \\uC5D0 \\uB300\\uD55C \\uC0C8\\uB85C\\uC6B4 \\uD638\\uCD9C \\uC0C1\\uD669\\uC5D0\\uC11C query \\uB97C \\uB2E4\\uC2DC fetch \\uD558\\uB3C4\\uB85D \\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"GraphQL response \\uC5D0\\uC11C \\uC5D0\\uB7EC \\uC811\\uADFC\\uD558\\uAE30\"), mdx(\"p\", null, \"\\uC0AC\\uC6A9\\uC790 \\uCE5C\\uD654\\uC801\\uC778 \\uBA54\\uC2DC\\uC9C0\\uB97C \\uD45C\\uC2DC\\uD558\\uAE30 \\uC704\\uD574 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC758 \\uC5D0\\uB7EC\\uC5D0 \\uC811\\uADFC\\uD558\\uB824\\uB294 \\uACBD\\uC6B0 GraphQL \\uC2A4\\uD0A4\\uB9C8\\uC758 \\uC77C\\uBD80\\uB85C \\uC624\\uB958 \\uC815\\uBCF4\\uB97C \\uBAA8\\uB378\\uB9C1\\uD558\\uACE0 \\uB178\\uCD9C\\uD558\\uB294 \\uAC83\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4, \\uC608\\uC0C1 \\uACB0\\uACFC\\uB97C \\uBC18\\uD658\\uD558\\uB294 \\uC2A4\\uD0A4\\uB9C8\\uC758 \\uD544\\uB4DC\\uB97C \\uB178\\uCD9C\\uD558\\uAC70\\uB098 \\uD574\\uB2F9 \\uD544\\uB4DC\\uB97C \\uD655\\uC778\\uD558\\uB294 \\uB3D9\\uC548 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD55C \\uACBD\\uC6B0(null\\uC744 \\uBC18\\uD658\\uD558\\uB294 \\uB300\\uC2E0) Error \\uAC1C\\uCCB4\\uB97C \\uB178\\uCD9C\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type Error {\\n  # User friendly message\\n  message: String!\\n}\\n\\ntype Foo {\\n  bar: Result | Error\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#에러-상태와-errorboundaries","title":"에러 상태와 ErrorBoundaries","items":[{"url":"#에러-발생-후-재시도","title":"에러 발생 후 재시도","items":[{"url":"#usequeryloader-또는-loadquery-사용하기","title":"useQueryLoader 또는 loadQuery 사용하기"},{"url":"#uselazyloadquery-를-사용하는-경우","title":"useLazyLoadQuery 를 사용하는 경우"}]},{"url":"#graphql-response-에서-에러-접근하기","title":"GraphQL response 에서 에러 접근하기"}]}]},"parent":{"relativePath":"a-guided-tour/rendering-data-basics/error-states-with-error-boundaries.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics","title":"Rendering Data Basics"}}},{"node":{"fields":{"slug":"/principles-and-architecture","title":"Principles And Architecture"}}},{"node":{"fields":{"slug":"/a-guided-tour","title":"A Guided Tour"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in GraphQL","title":"Thinking In Graph QL"}}},{"node":{"fields":{"slug":"/","title":"Relay"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in Relay","title":"Thinking In Relay"}}},{"node":{"fields":{"slug":"/getting-started/Step-by-step Guide","title":"Step By Step Guide"}}},{"node":{"fields":{"slug":"/getting-started/Introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 1)","title":"Refreshing And Refetching Part 1"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 2)","title":"Refreshing And Refetching Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reuse Cached Data For Rendering","title":"Reuse Cached Data For Rendering"}}},{"node":{"fields":{"slug":"/a-guided-tour/Rendering List Data and Pagination (part 2)","title":"Rendering List Data And Pagination Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reusing Cached Data for Rendering (part 2)","title":"Reusing Cached Data For Rendering Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/managing-data-outside-react","title":"Managing Data Outside React"}}},{"node":{"fields":{"slug":"/a-guided-tour/Updating Data","title":"Updating Data"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Queries","title":"Queries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Variables","title":"Variables"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Fragments","title":"Fragments"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/error-states-with-error-boundaries","title":"Error States With Error Boundaries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/relay-environment","title":"Relay Environment"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/loading-state-with-suspense","title":"Loading State With Suspense"}}}]}},"pageContext":{"id":"f89470bc-ceea-56db-854a-2ef99efde8f2"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}