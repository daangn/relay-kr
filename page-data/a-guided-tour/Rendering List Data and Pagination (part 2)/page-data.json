{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/a-guided-tour/Rendering List Data and Pagination (part 2)",
    "result": {"data":{"site":{"siteMetadata":{"title":"Relay | daangn","docsLocation":"https://github.com/daangn/relay-kr.github.io/tree/main/content"}},"mdx":{"fields":{"id":"722de050-1e35-5b68-b66c-3882795e2af9","title":"Rendering List Data And Pagination Part 2","slug":"/a-guided-tour/Rendering List Data and Pagination (part 2)"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Relay 02/18\"), mdx(\"h1\", null, \"Updating Connections\"), mdx(\"p\", null, \"connection\\uC744 \\uB80C\\uB354\\uB9C1 \\uD558\\uB824\\uACE0 \\uD560\\uB54C, \\uC0AC\\uC6A9\\uC790\\uC758 \\uB3D9\\uC791\\uC5D0 \\uB530\\uB77C \\uC544\\uC774\\uD15C\\uC744 connection\\uC5D0 \\uCD94\\uAC00\\uD558\\uAC70\\uB098 \\uC0AD\\uC81C\\uD558\\uACE0 \\uC2F6\\uC744 \\uC218\\uB3C4 \\uC788\\uB2E4. \\uC774\\uC804 Updating Data \\uC139\\uC158\\uC5D0\\uC11C Relay\\uB294 \\uC815\\uADDC\\uD654\\uB41C \\uB85C\\uCEEC in-memory \\uC800\\uC7A5\\uC18C\\uB97C \\uAC16\\uACE0 \\uC788\\uACE0, \\uADF8 \\uC800\\uC7A5\\uC18C\\uC5D0\\uB294 ID\\uB85C \\uAD6C\\uBD84\\uB418\\uBA70 \\uC815\\uADDC\\uD654\\uB41C GraphQL \\uB370\\uC774\\uD130\\uAC00 \\uC800\\uC7A5\\uB418\\uC5C8\\uB2E4. \"), mdx(\"p\", null, \"Relay\\uB97C \\uD1B5\\uD574 mutation, subscription \\uD639\\uC740 \\uB85C\\uCEEC \\uB370\\uC774\\uD130\\uB97C \\uC5C5\\uB370\\uC774\\uD2B8 \\uD560 \\uACBD\\uC6B0\\uC5D4 \\uBB34\\uC870\\uAC74 \\uB370\\uC774\\uD130\\uC5D0 \\uC811\\uADFC\\uD558\\uACE0 \\uC77D\\uACE0 \\uC4F0\\uB294 \\uB0B4\\uC6A9\\uC744 \\uD3EC\\uD568\\uD558\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"updater\"), \" \\uD568\\uC218\\uB97C \\uAD6C\\uD604\\uD574 \\uC81C\\uACF5\\uD574\\uC57C \\uD588\\uB2E4. \\uB808\\uCF54\\uB4DC\\uAC00 \\uC5C5\\uB370\\uC774\\uD2B8\\uB420 \\uACBD\\uC6B0, \\uC5C5\\uB370\\uC774\\uD2B8\\uB41C \\uB370\\uC774\\uD130\\uC5D0 \\uC601\\uD5A5\\uC744 \\uBC1B\\uB294 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB4E4\\uC740 \\uC804\\uBD80 \\uC774\\uB97C \\uC54C\\uC544\\uCC28\\uB824 \\uB2E4\\uC2DC \\uB80C\\uB354\\uB9C1\\uB41C\\uB2E4.\"), mdx(\"h2\", null, \"Connection Records\"), mdx(\"p\", null, \"Relay\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@connection\"), \" \\uC73C\\uB85C \\uB9C8\\uD0B9\\uB41C connection \\uD544\\uB4DC\\uB294 \\uC800\\uC7A5\\uC18C \\uB0B4\\uBD80\\uC5D0 \\uD2B9\\uBCC4\\uD55C \\uB808\\uCF54\\uB4DC\\uB85C\\uC11C \\uC800\\uC7A5\\uB418\\uACE0, \\uC5EC\\uD0DC\\uAE4C\\uC9C0 fetch\\uB41C \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uB4E4\\uC744 \\uC800\\uC7A5\\uD574\\uB454\\uB2E4. connection\\uC73C\\uB85C\\uBD80\\uD130 \\uB370\\uC774\\uD130\\uB97C \\uCD94\\uAC00\\uD558\\uAC70\\uB098 \\uC0AD\\uC81C\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 connection \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" \\uB97C \\uD1B5\\uD574 connection \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD574\\uC57C \\uD558\\uB294\\uB370, \\uC774 key\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@connection\"), \" \\uC120\\uC5B8\\uC744 \\uD560 \\uB54C \\uC81C\\uACF5\\uB41C\\uB2E4. \\uD2B9\\uD788, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" \\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler\"), \" API\\uB97C \\uC0AC\\uC6A9\\uD560 \\uB54C  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"updater\"), \" \\uD568\\uC218 \\uB0B4\\uBD80\\uC5D0\\uC11C connection\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uD574\\uC900\\uB2E4.\"), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4, \\uC544\\uB798\\uC758 fragment\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@connection\"), \" \\uC120\\uC5B8\\uC774 \\uB418\\uC5B4\\uC788\\uAE30 \\uB54C\\uBB38\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"updater\"), \" \\uD568\\uC218 \\uB0B4\\uBD80\\uC5D0\\uC11C connection \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD558\\uB294 \\uAC83\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {graphql} = require('react-relay');\\n\\nconst storyFragment = graphql`\\n  fragment StoryComponent_story on Story {\\n    comments @connection(key: \\\"StoryComponent_story_comments_connection\\\") {\\n      nodes {\\n        body {\\n          text\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")), mdx(\"h3\", null, \"Accessing connections using \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"__id\")), mdx(\"p\", null, \"connection\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__id\"), \" \\uD544\\uB4DC\\uB97C \\uCFFC\\uB9AC\\uD55C \\uD6C4, \\uC774\\uB97C \\uD1B5\\uD574 \\uC800\\uC7A5\\uC18C\\uC758 \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const fragmentData = useFragment(\\n  graphql`\\n    fragment StoryComponent_story on Story {\\n      comments @connection(key: \\\"StoryComponent_story_comments_connection\\\") {\\n        # __id \\uD544\\uB4DC\\uB97C \\uCFFC\\uB9AC\\uD55C\\uB2E4.\\n        __id\\n\\n        # ...\\n      }\\n    }\\n  `,\\n  props.story,\\n);\\n\\n// connection\\uC758 \\uB808\\uCF54\\uB4DC id\\uB97C \\uAC00\\uC838\\uC628\\uB2E4.\\nconst connectionID = fragmentData?.comments?.__id;\\n\")), mdx(\"p\", null, \"\\uC774\\uD6C4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connectionID\"), \" \\uB97C \\uD1B5\\uD574 \\uC800\\uC7A5\\uC18C\\uC758 \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uAC8C \\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"function updater(store: RecordSourceSelectorProxy) {\\n  // connectionID is passed as input to the mutation/subscription\\n  const connection = store.get(connectionID);\\n\\n  // ...\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC8FC\\uC758 : GraphQL API\\uAC00 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__id\"), \" \\uD544\\uB4DC\\uB97C \\uB178\\uCD9C\\uC2DC\\uD0AC \\uD544\\uC694\\uB294 \\uC5C6\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__id\"), \" \\uB294 Relay\\uAC00 connection \\uB808\\uCF54\\uB4DC\\uB97C \\uAD6C\\uBD84\\uD558\\uAE30 \\uC704\\uD574 \\uC790\\uB3D9\\uC73C\\uB85C \\uCD94\\uAC00\\uD55C \\uAC83\\uC774\\uB2E4.\")), mdx(\"h3\", null, \"Accessing connections using \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"ConnectionHandler.getConnectionID\")), mdx(\"p\", null, \"\\uB9CC\\uC57D connection\\uC744 \\uAC16\\uACE0 \\uC788\\uB294 \\uBD80\\uBAA8 \\uB808\\uCF54\\uB4DC\\uC758 connection ID\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB2E4\\uBA74, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.getConnectionID\"), \" API\\uB97C \\uD1B5\\uD574 connection \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uAC8C \\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('relay-runtime');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  // Get the connection ID\\n  const connectionID = ConnectionHandler.getConnectionID(\\n    storyID, // passed as input to the mutation/subscription\\n    'StoryComponent_story_comments_connection',\\n  );\\n\\n  // Get the connection record\\n  const connectionRecord = store.get(connectionID);\\n\\n  // ...\\n}\\n\")), mdx(\"h3\", null, \"Accessing connections using \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"ConnectionHandler.getConnection\")), mdx(\"p\", null, \"\\uB9CC\\uC57D connection\\uC744 \\uAC16\\uACE0 \\uC788\\uB294 \\uBD80\\uBAA8 \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB2E4\\uBA74, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.getConnection\"), \" API\\uC640 \\uADF8 \\uBD80\\uBAA8 \\uB808\\uCF54\\uB4DC\\uB97C \\uD1B5\\uD574 connection \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('relay-runtime');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  // Get parent story record\\n  // storyID is passed as input to the mutation/subscription\\n  const storyRecord = store.get(storyID);\\n\\n  // Get the connection record from the parent\\n  const connectionRecord = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n  );\\n\\n  // ...\\n}\\n\")), mdx(\"h2\", null, \"Adding edges\"), mdx(\"p\", null, \"connection\\uC5D0 edge\\uB97C \\uCD94\\uAC00\\uD560 \\uC218 \\uC788\\uB294 \\uBA87\\uAC00\\uC9C0 \\uB300\\uC548\\uB4E4\\uC774 \\uC788\\uB2E4.\"), mdx(\"h3\", null, \"Using declarative directives\"), mdx(\"p\", null, \"\\uBCF4\\uD1B5 mutation\\uC774\\uB098 subscription\\uC758 \\uD398\\uC774\\uB85C\\uB4DC\\uB294 \\uB2E8\\uC77C edge\\uB098 edge\\uB4E4\\uC758 \\uB9AC\\uC2A4\\uD2B8\\uC640 \\uD568\\uAED8 \\uC11C\\uBC84\\uC5D0\\uC11C \\uCD94\\uAC00\\uB41C \\uC0C8\\uB85C\\uC6B4 edge\\uB4E4\\uC744 \\uB178\\uCD9C\\uC2DC\\uD0A8\\uB2E4. \\uB9CC\\uC57D mutation \\uD639\\uC740 subscription\\uC774 response\\uC5D0\\uC11C \\uCFFC\\uB9AC\\uD560 \\uC218 \\uC788\\uB294 edge \\uD639\\uC740 edge\\uB4E4\\uC744 \\uB178\\uCD9C\\uC2DC\\uD0A8\\uB2E4\\uBA74, \\uC0C8\\uB85C \\uC0DD\\uC131\\uB41C edge\\uB97C \\uC9C0\\uC815\\uB41C connection\\uC5D0 \\uCD94\\uAC00\\uD558\\uAE30 \\uC704\\uD574 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@appendEdge\"), \" \\uD639\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@prependEdge\"), \" \\uC120\\uC5B8\\uC744 \\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uB610\\uB294 mutation\\uC774\\uB098 subscription\\uC758 \\uD398\\uC774\\uB85C\\uB4DC\\uAC00 \\uD558\\uB098\\uC758 node\\uB098 node\\uB4E4\\uC758 \\uB9AC\\uC2A4\\uD2B8\\uC640 \\uD568\\uAED8 \\uC11C\\uBC84\\uC5D0\\uC11C \\uD544\\uB4DC\\uB85C \\uCD94\\uAC00\\uB41C \\uC0C8\\uB85C\\uC6B4 \\uB178\\uB4DC\\uB4E4\\uC744 \\uB178\\uCD9C\\uC2DC\\uD0AC \\uC218\\uB3C4 \\uC788\\uB2E4. \\uC704\\uC5D0\\uC11C edge\\uB97C \\uB178\\uCD9C\\uC2DC\\uD0A8\\uAC83\\uACFC \\uB9C8\\uCC2C\\uAC00\\uC9C0\\uB85C, mutation\\uC774\\uB098 subscription\\uC774 \\uC751\\uB2F5\\uC5D0\\uC11C \\uC0C8\\uB85C\\uC6B4 \\uB178\\uB4DC\\uB098 \\uB178\\uB4DC\\uB4E4\\uC758 \\uD544\\uB4DC\\uB97C \\uB178\\uCD9C\\uC2DC\\uD0A8\\uB2E4\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@appendNode\"), \" \\uD639\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@prependNode\"), \" \\uC120\\uC5B8\\uC744 \\uD1B5\\uD574 \\uC0C8\\uB85C \\uC9C0\\uC815\\uB41C \\uB178\\uB4DC\\uB4E4\\uC744 \\uC9C0\\uC815\\uB41C connection\\uC5D0 \\uCD94\\uAC00\\uC2DC\\uD0AC \\uC218 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uC774 \\uC120\\uC5B8\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connections\"), \" \\uD30C\\uB77C\\uBBF8\\uD130\\uB97C \\uBC1B\\uB294\\uB370, \\uC774\\uB294 connection ID\\uB4E4\\uC744 \\uBC30\\uC5F4\\uB85C \\uAC16\\uACE0 \\uC788\\uB294 GraphQL \\uBCC0\\uC218\\uC774\\uB2E4. Connection ID\\uB4E4\\uC740 connection\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__id\"), \" \\uD544\\uB4DC\\uC5D0\\uC11C \\uC5BB\\uC5B4\\uC9C0\\uAC70\\uB098 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.getconnectionID\"), \" API\\uB97C \\uD1B5\\uD574 \\uC5BB\\uC744 \\uC218 \\uC788\\uB2E4.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@appendEdge\"), \" / \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@prependEdge\")), mdx(\"p\", null, \"\\uC774 \\uC120\\uC5B8\\uB4E4\\uC740 \\uD558\\uB098\\uC758 edge \\uD639\\uC740 \\uC5EC\\uB7EC edge\\uB4E4\\uC774 \\uB2F4\\uAE34 \\uB9AC\\uC2A4\\uD2B8\\uC5D0\\uC11C \\uB3D9\\uC791\\uD55C\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@prependEdge\"), \" \\uB294 \\uC120\\uD0DD\\uB41C edge\\uB4E4\\uC744 \\uAC01 connection\\uB4E4\\uC758 \\uB9E8 \\uC55E\\uC5D0 \\uCD94\\uAC00\\uC2DC\\uD0A4\\uACE0, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@appendEdge\"), \" \\uB294 \\uC120\\uD0DD\\uB41C edge\\uB4E4\\uC744 \\uAC01 connection\\uB4E4\\uC758 \\uB9E8 \\uB4A4\\uC5D0 \\uCD94\\uAC00\\uC2DC\\uD0A8\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC778\\uC790\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"connections\"), \" : connection ID\\uB4E4\\uC758 \\uBC30\\uC5F4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"edgeTypeName\"), \" : node\\uB97C \\uD3EC\\uD568\\uD558\\uB294 edge\\uC758 \\uD0C0\\uC785 \\uC774\\uB984. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ConnectionHandler.createEdge\"), \" \\uC758 edge \\uD0C0\\uC785 \\uC778\\uC790\\uC640 \\uB3D9\\uC77C\\uD558\\uB2E4.\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Get the connection ID using the `__id` field\\nconst connectionID = fragmentData?.comments?.__id;\\n\\n// Or get it using `ConnectionHandler.getConnectionID()`\\nconst connectionID = ConnectionHandler.getConnectionID(\\n  '<story-id>',\\n  'StoryComponent_story_comments_connection',\\n);\\n\\n// ...\\n\\n// Mutation\\ncommitMutation<AppendCommentMutation>(environment, {\\n  mutation: graphql`\\n    mutation AppendCommentMutation(\\n      # Define a GraphQL variable for the connections array\\n      $connections: [ID!]!\\n      $input: CommentCreateInput\\n    ) {\\n      commentCreate(input: $input) {\\n        # Use @appendNode or @prependNode on the node field\\n        feedbackCommentNode @appendNode(connections: $connections, edgeTypeName: \\\"CommentsEdge\\\") {\\n          id\\n        }\\n      }\\n    }\\n  `,\\n  variables: {\\n    input,\\n    // Pass the `connections` array\\n    connections: [connectionID],\\n  },\\n});\\n\")), mdx(\"h2\", null, \"Manually adding edges\"), mdx(\"p\", null, \"\\uC704\\uC758 \\uC120\\uC5B8\\uBB38\\uC740 connection\\uC5D0\\uC11C \\uD56D\\uBAA9\\uB4E4\\uC744 \\uC218\\uB3D9\\uC73C\\uB85C \\uCD94\\uAC00 \\uD639\\uC740 \\uC81C\\uAC70\\uD560 \\uD544\\uC694\\uC131\\uC744 \\uD06C\\uAC8C \\uC81C\\uAC70\\uD558\\uC9C0\\uB9CC, \\uC12C\\uC138\\uD55C \\uC81C\\uC5B4\\uB294 \\uBD88\\uAC00\\uB2A5\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uBAA8\\uB4E0 \\uC0AC\\uB840\\uB97C \\uCDA9\\uC871\\uC2DC\\uD0A4\\uC9C0 \\uC54A\\uC744 \\uC218\\uB3C4 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"connection\\uC744 \\uC218\\uC815\\uD558\\uB294 updater\\uB97C \\uC791\\uC131\\uD558\\uB824\\uBA74 connection \\uB808\\uCF54\\uB4DC\\uC5D0 \\uB300\\uD55C \\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uC788\\uB294\\uC9C0 \\uD655\\uC778\\uD574\\uC57C \\uD55C\\uB2E4. connection \\uB808\\uCF54\\uB4DC\\uAC00 \\uC788\\uC73C\\uBA74 connection\\uC5D0 \\uCD94\\uAC00\\uD558\\uB824\\uB294 \\uC0C8 edge\\uC5D0 \\uB300\\uD55C \\uB808\\uCF54\\uB4DC\\uB3C4 \\uD544\\uC694\\uD558\\uB2E4. \\uC77C\\uBC18\\uC801\\uC73C\\uB85C mutation \\uD639\\uC740 subscription\\uC758 \\uD398\\uC774\\uB85C\\uB4DC\\uC5D0\\uB294 \\uCD94\\uAC00\\uB41C \\uC0C8\\uB85C\\uC6B4 edge\\uAC00 \\uD3EC\\uD568\\uB41C\\uB2E4. \\uADF8\\uB807\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uCC98\\uC74C\\uBD80\\uD130 \\uC0C8 edge\\uB97C \\uAD6C\\uC131\\uD560 \\uC218\\uB3C4 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4 \\uB2E4\\uC74C mutation\\uC758 response\\uC5D0\\uC11C \\uC0C8\\uB85C \\uC0DD\\uC131\\uB41C edge\\uB97C \\uCFFC\\uB9AC\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {graphql} = require('react-relay');\\n\\nconst createCommentMutation = graphql`\\n  mutation CreateCommentMutation($input: CommentCreateData!) {\\n    comment_create(input: $input) {\\n      comment_edge {\\n        cursor\\n        node {\\n          body {\\n            text\\n          }\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0C8\\uB85C\\uC6B4 edge\\uB97C \\uAC00\\uC838\\uC624\\uAE30 \\uC704\\uD574 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cursor\"), \" \\uB97C \\uAC00\\uC838\\uC628\\uB2E4\\uB294 \\uC810\\uC744 \\uC8FC\\uBAA9\\uD574\\uC57C \\uD55C\\uB2E4. \\uBB34\\uC870\\uAC74 \\uD544\\uC694\\uD55C \\uAC83\\uC740 \\uC544\\uB2C8\\uC9C0\\uB9CC \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cursor\"), \" \\uAE30\\uBC18\\uC758 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC744 \\uC218\\uD589\\uD560 \\uAC83\\uC774\\uB77C\\uBA74 \\uD544\\uC694\\uD558\\uB2E4.\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"updater\"), \" \\uB0B4\\uBD80\\uC5D0\\uC11C\\uB294 Relay\\uC758 \\uC800\\uC7A5\\uC18C API\\uC640 mutation \\uC751\\uB2F5\\uC744 \\uC774\\uC6A9\\uD574 edge\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('relay-runtime');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  const storyRecord = store.get(storyID);\\n  const connectionRecord = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n  );\\n\\n  // Get the payload returned from the server\\n  const payload = store.getRootField('comment_create');\\n\\n  // Get the edge inside the payload\\n  const serverEdge = payload.getLinkedRecord('comment_edge');\\n\\n  // Build edge for adding to the connection\\n  const newEdge = ConnectionHandler.buildConnectionEdge(\\n    store,\\n    connectionRecord,\\n    serverEdge,\\n  );\\n\\n  // ...\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mutation \\uD398\\uC774\\uB85C\\uB4DC\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"store.getRootField\"), \" \\uBA54\\uC18C\\uB4DC\\uB97C \\uD1B5\\uD574 \\uC77D\\uC5B4\\uC640 \\uC704 \\uC800\\uC7A5\\uC18C\\uC5D0\\uC11C \\uB8E8\\uD2B8 \\uD544\\uB4DC\\uB85C\\uC368 \\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD558\\uB2E4. \\uC774 \\uC608\\uC2DC\\uC5D0\\uC11C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"comment_create\"), \" \\uB97C \\uC77D\\uACE0 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704 \\uC608\\uC2DC\\uC5D0\\uC11C\\uB294 \\uC11C\\uBC84\\uB85C\\uBD80\\uD130 \\uBC1B\\uC544\\uC628 \\uBC1B\\uC544\\uC628 edge\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ConnectionHandler.buildConectionEdge\"), \" \\uBA54\\uC18C\\uB4DC\\uB97C \\uC774\\uC6A9\\uD574 \\uC0C8 edge\\uB97C \\uCD94\\uAC00\\uD588\\uB2E4.\")), mdx(\"p\", null, \"\\uC0C8 edge\\uB97C \\uCD94\\uAC00\\uD558\\uAE30 \\uC704\\uD574\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.createEdge\"), \" \\uBA54\\uC18C\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('relay-runtime');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  const storyRecord = store.get(storyID);\\n  const connectionRecord = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n  );\\n\\n  // Create a new local Comment record\\n  const id = `client:new_comment:${randomID()}`;\\n  const newCommentRecord = store.create(id, 'Comment');\\n\\n  // Create new edge\\n  const newEdge = ConnectionHandler.createEdge(\\n    store,\\n    connectionRecord,\\n    newCommentRecord,\\n    'CommentEdge', /* GraphQl Type for edge */\\n  );\\n\\n  // ...\\n}\\n\")), mdx(\"p\", null, \"\\uD55C\\uBC88 \\uC0C8 edge\\uC758 \\uB808\\uCF54\\uB4DC\\uB97C \\uC5BB\\uC5B4\\uC628 \\uC774\\uD6C4\\uB85C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.insertEdgeAfter\"), \" \\uD639\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.insertEdgeBefore\"), \" \\uB97C \\uC774\\uC6A9\\uD574 \\uC0C8 edge\\uB97C connection\\uC5D0 \\uCD94\\uAC00\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('relay-runtime');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  const storyRecord = store.get(storyID);\\n  const connectionRecord = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n  );\\n\\n  const newEdge = (...);\\n\\n  // Add edge to the end of the connection\\n  ConnectionHandler.insertEdgeAfter(\\n    connectionRecord,\\n    newEdge,\\n  );\\n\\n  // Add edge to the beginning of the connection\\n  ConnectionHandler.insertEdgeBefore(\\n    connectionRecord,\\n    newEdge,\\n  );\\n}\\n\")), mdx(\"h2\", null, \"Removing edges\"), mdx(\"h3\", null, \"Using the declarative deletion directive\"), mdx(\"p\", null, \"edge\\uB97C \\uCD94\\uAC00\\uD558\\uB294\\uAC83\\uACFC \\uC720\\uC0AC\\uD558\\uAC8C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@deleteEdge\"), \" \\uC120\\uC5B8\\uC744 \\uD1B5\\uD574 edge\\uB97C connection\\uC73C\\uB85C\\uBD80\\uD130 \\uC81C\\uAC70\\uD560 \\uC218 \\uC788\\uB2E4. mutation\\uC774\\uB098 subscription\\uC774 response\\uC5D0\\uC11C \\uCFFC\\uB9AC\\uD560 \\uC218 \\uC788\\uB294 \\uC0AD\\uC81C\\uB41C \\uB178\\uB4DC\\uC758 ID\\uAC00 \\uC788\\uB294 \\uD544\\uB4DC\\uB97C \\uB178\\uCD9C\\uD558\\uB294 \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@deleteEdge\"), \" \\uC9C0\\uC2DC\\uBB38\\uC744 \\uC774\\uC6A9\\uD574 connection\\uC5D0\\uC11C \\uAC01 edge\\uB97C \\uC0AD\\uC81C\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@deleteEdge\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ID\"), \" \\uD639\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[ID]\"), \" \\uB97C \\uBC18\\uD658\\uD558\\uB294 GraphQL \\uD544\\uB4DC\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4. \\uB3D9\\uC77C\\uD55C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" \\uB97C \\uAC00\\uC9C4 \\uC5D0\\uC9C0\\uB97C \\uD3EC\\uD568\\uD558\\uB294 \\uB178\\uB4DC\\uB4E4\\uC744 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connections\"), \" \\uBC30\\uC5F4\\uC5D0\\uC11C \\uC0AD\\uC81C\\uD55C\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC778\\uC790\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"connections\"), \" : connection ID\\uB4E4\\uC758 \\uBC30\\uC5F4\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Get the connection ID using the `__id` field\\nconst connectionID = fragmentData?.comments?.__id;\\n\\n// Or get it using `ConnectionHandler.getConnectionID()`\\nconst connectionID = ConnectionHandler.getConnectionID(\\n  '<story-id>',\\n  'StoryComponent_story_comments_connection',\\n);\\n\\n// ...\\n\\n// Mutation\\ncommitMutation<DeleteCommentsMutation>(environment, {\\n  mutation: graphql`\\n    mutation DeleteCommentsMutation(\\n      # Define a GraphQL variable for the connections array\\n      $connections: [ID!]!\\n      $input: CommentsDeleteInput\\n    ) {\\n      commentsDelete(input: $input) {\\n        deletedCommentIds @deleteEdge(connections: $connections)\\n      }\\n    }\\n  `,\\n  variables: {\\n    input,\\n    // Pass the `connections` array\\n    connections: [connectionID],\\n  },\\n});\\n\")), mdx(\"h2\", null, \"Manually removing edges\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler\"), \" \\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.deleteNode\"), \" \\uBA54\\uC18C\\uB4DC\\uB97C \\uD1B5\\uD574 connection\\uC73C\\uB85C\\uBD80\\uD130\\uC758 edge \\uC0AD\\uC81C\\uB97C \\uC9C0\\uC6D0\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('RelayModern');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  const storyRecord = store.get(storyID);\\n  const connectionRecord = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n  );\\n\\n  // Remove edge from the connection, given the ID of the node\\n  ConnectionHandler.deleteNode(\\n    connectionRecord,\\n    commentIDToDelete,\\n  );\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC5EC\\uAE30\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ConnectionHandler.deleteNode\"), \" \\uB294 \\uC8FC\\uC5B4\\uC9C4 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node\"), \" \\uC758 ID\\uB97C \\uD1B5\\uD574 edge\\uB97C \\uC0AD\\uC81C\\uD55C\\uB2E4. \\uC989, \\uC5B4\\uB5A4 node\\uAC00 \\uC8FC\\uC5B4\\uC9C4 id\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 edge\\uB97C \\uAC16\\uACE0 \\uC788\\uB294\\uC9C0\\uB97C \\uD6D1\\uC5B4\\uBCF4\\uACE0, \\uADF8 edge\\uB97C \\uC0AD\\uC81C\\uD55C\\uB2E4.\")), mdx(\"h2\", null, \"Connection identity with filters\"), mdx(\"p\", null, \"connection\\uC744 \\uC120\\uC5B8\\uD560 \\uB54C filter \\uC778\\uC790\\uB97C \\uC804\\uB2EC\\uD558\\uBA74 filter\\uC5D0 \\uC0AC\\uC6A9\\uB41C \\uAC12\\uB4E4\\uC740 connection \\uC2DD\\uBCC4\\uC790\\uC758 \\uC77C\\uBD80\\uAC00 \\uB41C\\uB2E4. \\uC989, Relay \\uC800\\uC7A5\\uC18C\\uC5D0\\uC11C connection\\uC744 \\uC2DD\\uBCC4\\uD558\\uAE30 \\uC704\\uD55C \\uAC12\\uC73C\\uB85C \\uC0AC\\uC6A9\\uB41C\\uB2E4.\"), mdx(\"p\", null, \"\\uC544\\uB798 \\uC608\\uC2DC\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"comments\"), \" \\uD544\\uB4DC\\uAC00 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC740 \\uC778\\uC790\\uB97C \\uBC1B\\uB294\\uB2E4\\uACE0 \\uD558\\uC790.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {graphql} = require('RelayModern');\\n\\nconst storyFragment = graphql`\\n  fragment StoryComponent_story on Story {\\n    comments(\\n      order_by: $orderBy,\\n      filter_mode: $filterMode,\\n      language: $language,\\n    ) @connection(key: \\\"StoryComponent_story_comments_connection\\\") {\\n      edges {\\n        nodes {\\n          body {\\n            text\\n          }\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"comments\"), \" \\uD544\\uB4DC\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$orderBy\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$filterMode\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$language\"), \" \\uB97C \\uC778\\uC790\\uB85C \\uBC1B\\uC73C\\uBA70 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"comments\"), \" \\uB97C \\uCFFC\\uB9AC\\uD560 \\uB54C \\uC2DD\\uBCC4\\uC790\\uB85C\\uC11C \\uB3D9\\uC791\\uD55C\\uB2E4.  \\uC774\\uD6C4 connection \\uB808\\uCF54\\uB4DC\\uC5D0 \\uC811\\uADFC\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uC704 \\uAC12\\uB4E4\\uC744 \\uB118\\uACA8\\uC8FC\\uC5B4\\uC57C \\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uAC19\\uC740 \\uC774\\uC720\\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ConnectionHandler.getConnection\"), \" \\uBA54\\uC18C\\uB4DC\\uB97C \\uC774\\uC6A9\\uD560 \\uB54C\\uB3C4 \\uC138\\uBC88\\uC9F8 \\uC778\\uC790\\uB85C \\uC704 \\uAC12\\uB4E4\\uC744 \\uB118\\uACA8\\uC8FC\\uC5B4\\uC57C \\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('RelayModern');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  const storyRecord = store.get(storyID);\\n\\n  // Get the connection instance for the connection with comments sorted\\n  // by the date they were added\\n  const connectionRecordSortedByDate = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n    {order_by: '*DATE_ADDED*', filter_mode: null, language: null}\\n  );\\n\\n  // Get the connection instance for the connection that only contains\\n  // comments made by friends\\n  const connectionRecordFriendsOnly = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n    {order_by: null, filter_mode: '*FRIENDS_ONLY*', langugage: null}\\n  );\\n}\\n\")), mdx(\"p\", null, \"\\uC778\\uC790\\uB85C \\uB118\\uACA8\\uC900 \\uAC01 \\uBCC0\\uC218\\uB4E4\\uC758 \\uC870\\uD569\\uC774 \\uD544\\uD130\\uB85C \\uC791\\uC6A9\\uD574 \\uB2E4\\uB978 \\uB808\\uCF54\\uB4DC\\uB97C \\uB9AC\\uD134\\uD55C\\uB2E4\\uB294 \\uAC83\\uC744 \\uC554\\uC2DC\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"connection\\uC744 \\uC5C5\\uB370\\uC774\\uD2B8 \\uD558\\uB824\\uACE0 \\uD560 \\uACBD\\uC6B0 \\uADF8 \\uC5C5\\uB370\\uC774\\uD2B8\\uC5D0 \\uC601\\uD5A5\\uC744 \\uBC1B\\uB294 \\uBAA8\\uB4E0 \\uB808\\uCF54\\uB4DC\\uB4E4\\uC744 \\uC5C5\\uB370\\uC774\\uD2B8 \\uD574\\uC57C \\uD55C\\uB2E4. \\uC608\\uB97C \\uB4E4\\uC5B4, \\uC0C8 \\uB313\\uAE00\\uC744 \\uD558\\uB098 \\uCD94\\uAC00\\uD558\\uB824 \\uD560 \\uACBD\\uC6B0 \\uC0AC\\uC6A9\\uC790\\uC758 \\uCE5C\\uAD6C\\uB85C\\uBD80\\uD130 \\uB9CC\\uB4E4\\uC5B4\\uC9C4 \\uB313\\uAE00\\uC774 \\uC544\\uB2C8\\uB77C\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FRIENDS_ONLY\"), \" connection\\uC5D0 \\uB313\\uAE00\\uC774 \\uCD94\\uAC00 \\uB418\\uC5B4\\uC11C\\uB294 \\uC548\\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {ConnectionHandler} = require('relay-runtime');\\n\\nfunction updater(store: RecordSourceSelectorProxy) {\\n  const storyRecord = store.get(storyID);\\n\\n  // Get the connection instance for the connection with comments sorted\\n  // by the date they were added\\n  const connectionRecordSortedByDate = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n    {order_by: '*DATE_ADDED*', filter_mode: null, language: null}\\n  );\\n\\n  // Get the connection instance for the connection that only contains\\n  // comments made by friends\\n  const connectionRecordFriendsOnly = ConnectionHandler.getConnection(\\n    storyRecord,\\n    'StoryComponent_story_comments_connection',\\n    {order_by: null, filter_mode: '*FRIENDS_ONLY*', language: null}\\n  );\\n\\n  const newComment = (...);\\n  const newEdge = (...);\\n\\n  ConnectionHandler.insertEdgeAfter(\\n    connectionRecordSortedByDate,\\n    newEdge,\\n  );\\n\\n  if (isMadeByFriend(storyRecord, newComment) {\\n    // Only add new comment to friends-only connection if the comment\\n    // was made by a friend\\n    ConnectionHandler.insertEdgeAfter(\\n      connectionRecordFriendsOnly,\\n      newEdge,\\n    );\\n  }\\n}\\n\")), mdx(\"p\", null, \"\\uC5EC\\uB7EC \\uD544\\uD130\\uB4E4\\uC744 \\uC774\\uC6A9\\uD574 connection\\uB4E4\\uC744 \\uAD00\\uB9AC\\uD55C\\uB2E4. \\uADF8\\uCE58\\uB9CC \\uB2E8\\uC21C\\uD788 \\uBA87\\uAC1C\\uC758 \\uD544\\uD130 \\uC870\\uD569\\uB9CC\\uC73C\\uB85C \\uBCF5\\uC7A1\\uB3C4\\uAC00 \\uD06C\\uAC8C \\uC99D\\uAC00\\uD558\\uB294 \\uBB38\\uC81C\\uC810\\uC774 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uB97C \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD574 Relay\\uB294 \\uB450\\uAC00\\uC9C0 \\uC804\\uB7B5\\uC744 \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC5B4\\uB5A4 \\uD544\\uD130\\uAC00 connection \\uC2DD\\uBCC4\\uC790\\uB85C \\uC0AC\\uC6A9\\uB418\\uB294\\uC9C0 \\uC815\\uD655\\uD558\\uAC8C \\uD2B9\\uC815\\uD55C\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC5D0 \\uC4F0\\uC774\\uB294 \\uD544\\uD130\\uB9CC \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@connection\"), \" \\uC120\\uC5B8\\uC744 \\uB0B4\\uBD80\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const {graphql} = require('relay-runtime');\\n\\nconst storyFragment = graphql`\\n  fragment StoryComponent_story on Story {\\n    comments(\\n      order_by: $orderBy\\n      filter_mode: $filterMode\\n      language: $language\\n    )\\n      @connection(\\n        key: \\\"StoryComponent_story_comments_connection\\\"\\n        filters: [\\\"order_by\\\", \\\"filter_mode\\\"]\\n      ) {\\n      edges {\\n        nodes {\\n          body {\\n            text\\n          }\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"language\\uB294 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC5D0 \\uC0AC\\uC6A9\\uB418\\uB294 \\uD544\\uD130\\uAC00 \\uC544\\uB2C8\\uAE30 \\uB54C\\uBB38\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@connection\"), \" \\uB0B4\\uBD80\\uC5D0 \\uB123\\uC5B4\\uC8FC\\uC9C0 \\uC54A\\uC558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC1C\\uB150\\uC801\\uC73C\\uB85C\\uB294 \\uC5B4\\uB5A4 \\uC778\\uC790\\uB9CC \\uC11C\\uBC84\\uB85C\\uBD80\\uD130 \\uBC1B\\uC544\\uC628 connection\\uC758 \\uACB0\\uACFC\\uC5D0 \\uC601\\uD5A5\\uC744 \\uBBF8\\uCE58\\uB294\\uC9C0 \\uC815\\uD574\\uC900 \\uAC83\\uC774\\uB2E4. \\uB9CC\\uC57D \\uC5B4\\uB5A4 \\uC778\\uC790\\uAC00 \\uC11C\\uBC84\\uB85C\\uBD80\\uD130 \\uBC1B\\uC544\\uC628 connection\\uC758 \\uACB0\\uACFC\\uB098 \\uC815\\uB82C\\uBC29\\uC2DD\\uC5D0 \\uC601\\uD5A5\\uC744 \\uC8FC\\uC9C0 \\uC54A\\uB294\\uB2E4\\uBA74 \\uBE7C\\uB3C4 \\uAD1C\\uCC2E\\uC740 \\uC778\\uC790\\uB77C\\uB294 \\uB73B\\uC774\\uB2E4. \\uC704 \\uC608\\uC2DC\\uC5D0\\uC11C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"language\"), \" \\uAC00 \\uADF8\\uB807\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC571\\uC774 \\uC2E4\\uD589\\uB428\\uC5D0 \\uC788\\uC5B4 \\uC5B4\\uB5A4 \\uBD80\\uBD84\\uB3C4 \\uBCC0\\uACBD\\uD558\\uC9C0 \\uC54A\\uB294 \\uC778\\uC790\\uAC00 \\uC788\\uB2E4\\uBA74 \\uD544\\uD130\\uC5D0\\uC11C \\uC9C0\\uC6CC\\uB3C4 \\uC548\\uC804\\uD558\\uB2E4\\uB294 \\uB73B\\uC774 \\uB41C\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB354 \\uC26C\\uC6B4 \\uB300\\uC548\\uC740 \\uC544\\uC9C1 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4.\"))), mdx(\"h1\", null, \"Advanced Pagination\"), mdx(\"p\", null, \"\\uC774\\uBC88 \\uC139\\uC158\\uC5D0\\uC11C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"usePaginationFragment\"), \" \\uB97C \\uC774\\uC6A9\\uD55C \\uACE0\\uAE09 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158 \\uAD6C\\uD604 \\uBC29\\uBC95\\uB4E4\\uC744 \\uC54C\\uC544\\uBCF8\\uB2E4.\"), mdx(\"h2\", null, \"Pagination Over Multiple Connections\"), mdx(\"p\", null, \"\\uAC19\\uC740 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uC5EC\\uB7EC\\uAC1C\\uC758 connection\\uB4E4\\uC744 \\uC774\\uC6A9\\uD574 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158 \\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"usePaginationFragment\"), \" \\uB97C \\uC5EC\\uB7EC\\uBC88 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import type {CombinedFriendsListComponent_user$key} from 'CombinedFriendsListComponent_user.graphql';\\nimport type {CombinedFriendsListComponent_viewer$key} from 'CombinedFriendsListComponent_viewer.graphql';\\n\\nconst React = require('React');\\n\\nconst {graphql, usePaginationFragment} = require('react-relay');\\n\\ntype Props = {\\n  user: CombinedFriendsListComponent_user$key,\\n  viewer: CombinedFriendsListComponent_viewer$key,\\n};\\n\\nfunction CombinedFriendsListComponent(props: Props) {\\n\\n  const {data: userData, ...userPagination} = usePaginationFragment(\\n    graphql`\\n      fragment CombinedFriendsListComponent_user on User {\\n        name\\n        friends\\n          @connection(\\n            key: \\\"CombinedFriendsListComponent_user_friends_connection\\\"\\n          ) {\\n          edges {\\n            node {\\n              name\\n              age\\n            }\\n          }\\n        }\\n      }\\n    `,\\n    props.user,\\n  );\\n\\n  const {data: viewerData, ...viewerPagination} = usePaginationFragment(\\n    graphql`\\n      fragment CombinedFriendsListComponent_user on Viewer {\\n        actor {\\n          ... on User {\\n            name\\n            friends\\n              @connection(\\n                key: \\\"CombinedFriendsListComponent_viewer_friends_connection\\\"\\n              ) {\\n              edges {\\n                node {\\n                  name\\n                  age\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    `,\\n    props.viewer,\\n  );\\n\\n  return (...);\\n}\\n\")), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uD558\\uBA74 \\uB418\\uAE30\\uB294 \\uD558\\uC9C0\\uB9CC Relay\\uC5D0\\uC11C\\uB294 \\uD558\\uB098\\uC758 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB2F9 \\uD558\\uB098\\uC758 connection\\uC744 \\uC774\\uC6A9\\uD558\\uB294 \\uAC83\\uC744 \\uCD94\\uCC9C\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"Bi-directional Pagination\"), mdx(\"p\", null, \"Pagination \\uC139\\uC158\\uC5D0\\uC11C \\uC5B4\\uB5BB\\uAC8C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"usePaginationFragment\"), \" \\uB97C \\uC0AC\\uC6A9\\uD574 \\uC77C\\uBC29\\uC801\\uC778 \\uBC29\\uD5A5(forward)\\uC758 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC744 \\uD558\\uB294\\uC9C0 \\uC54C\\uC544\\uBCF4\\uC558\\uB2E4. \\uD558\\uC9C0\\uB9CC connection\\uC740 \\uC5ED\\uBC29\\uD5A5(backward) \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uB3C4 \\uC9C0\\uC6D0\\uD55C\\uB2E4. forward\\uC640 backward\\uB294 connection\\uC758 \\uB0B4\\uC6A9\\uC774 \\uC5B4\\uB5BB\\uAC8C \\uC815\\uB82C\\uB418\\uB294\\uC9C0\\uB97C \\uC758\\uBBF8\\uD55C\\uB2E4. \\uC608\\uB97C \\uB4E4\\uC790\\uBA74 \\u201Cforward\\u201D\\uB294 \\uCD5C\\uC2E0\\uC21C, \\u201Cbackward\\u201D\\uB294 \\uC624\\uB798\\uB41C \\uC21C\\uC774 \\uB420 \\uAC83\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uBC29\\uD5A5\\uC758 \\uC758\\uBBF8\\uC640\\uB294 \\uBCC4\\uAC1C\\uB85C, Relay\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"usePaginationFragment\"), \" \\uB97C \\uC774\\uC6A9\\uD574 \\uC5ED\\uBC29\\uD5A5 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC744 \\uC704\\uD55C API\\uB97C \\uBCC4\\uB3C4\\uB85C \\uC9C0\\uC6D0\\uD558\\uAE30\\uB3C4 \\uD55C\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"before\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"last\"), \" \\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"after\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"first\"), \" \\uC640 \\uD568\\uAED8 \\uC0AC\\uC6A9\\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import type {FriendsListComponent_user$key} from 'FriendsListComponent_user.graphql';\\n\\nconst React = require('React');\\nconst {Suspense} = require('React');\\n\\nconst {graphql, usePaginationFragment} = require('react-relay');\\n\\ntype Props = {\\n  userRef: FriendsListComponent_user$key,\\n};\\n\\nfunction FriendsListComponent(props: Props) {\\n  const {\\n    data,\\n    loadPrevious,\\n    hasPrevious,\\n    // ... forward pagination values\\n  } = usePaginationFragment(\\n    graphql`\\n      fragment FriendsListComponent_user on User {\\n        name\\n        friends(after: $after, before: $before, first: $first, last: $last)\\n          @connection(key: \\\"FriendsListComponent_user_friends_connection\\\") {\\n          edges {\\n            node {\\n              name\\n              age\\n            }\\n          }\\n        }\\n      }\\n    `,\\n    userRef,\\n  );\\n\\n  return (\\n    <>\\n      <h1>Friends of {data.name}:</h1>\\n      <List items={data.friends?.edges.map(edge => edge.node)}>\\n        {node => {\\n          return (\\n            <div>\\n              {node.name} - {node.age}\\n            </div>\\n          );\\n        }}\\n      </List>\\n\\n      {hasPrevious ? (\\n        <Button onClick={() => loadPrevious(10)}>\\n          Load more friends\\n        </Button>\\n      ) : null}\\n\\n      {/* Forward pagination controls can go simultaneously here */}\\n    </>\\n  );\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8\\uC21C\\uD788 \\uBA85\\uBA85\\uD558\\uB294 \\uBC29\\uC2DD\\uB9CC \\uB2E4\\uB978\\uAC83\\uC774\\uACE0 \\u201Cforward\\u201D, \\u201Cbackward\\u201D\\uAC00 \\uC758\\uBBF8\\uD558\\uB294 \\uBC14\\uB294 after, first\\uB97C \\uC774\\uC6A9\\uD55C \\uBC29\\uC2DD\\uACFC \\uC644\\uC804\\uD788 \\uAC19\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201Cforward\\u201D, \\u201Cbackward\\u201D\\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC758 \\uC804\\uC81C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"usePaginationFragment\"), \" \\uB97C \\uD55C \\uBC88\\uB9CC \\uD638\\uCD9C\\uD558\\uB294 \\uAC83\\uC774\\uB2E4. \\uB530\\uB77C\\uC11C \\uB3D9\\uC77C\\uD55C \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uB0B4\\uC5D0\\uC11C \\u201Cforward\\u201D\\uC640 \\u201Cbackaward\\u201D\\uB294 \\uB3D9\\uC2DC\\uC5D0 \\uC218\\uD589\\uB420 \\uC218 \\uC788\\uB2E4.\")), mdx(\"h2\", null, \"Custom Connection State\"), mdx(\"p\", null, \"\\uAE30\\uBCF8\\uC801\\uC73C\\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"usePaginationFragment\"), \" \\uC640 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@connection\"), \" \\uC744 \\uC0AC\\uC6A9\\uD560 \\uB54C, Relay\\uB294 \\u201Cforward\\u201D\\uC778 \\uACBD\\uC6B0 \\uC0C8\\uB85C\\uC6B4 \\uD398\\uC774\\uC9C0\\uB97C connection\\uC5D0 \\uB4A4\\uC5D0 \\uCD94\\uAC00\\uD558\\uACE0, \\u201Cbackward\\u201D\\uC778 \\uACBD\\uC6B0 \\uC0C8 \\uD398\\uC774\\uC9C0\\uB97C \\uC55E\\uC5D0 \\uCD94\\uAC00\\uD55C\\uB2E4. \\uC989, \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB294 \\uD56D\\uC0C1 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC744 \\uD1B5\\uD574 \\uCD95\\uC801\\uB41C \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uC640, mutation\\uC774\\uB098 subscription\\uC744 \\uD1B5\\uD574 \\uCD94\\uAC00\\uB418\\uAC70\\uB098 \\uC218\\uC815\\uB41C \\uACB0\\uACFC\\uB85C\\uC11C\\uC758  connection\\uC744 \\uB80C\\uB354\\uB9C1\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uADF8\\uB7EC\\uB098, \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158 \\uACB0\\uACFC\\uB97C \\uBCD1\\uD569\\uD558\\uACE0 \\uCD95\\uC801\\uC2DC\\uD0AC \\uB54C \\uB2E4\\uB974\\uAC8C \\uB3D9\\uC791\\uD558\\uB294 \\uAC83\\uC744 \\uBC14\\uB784 \\uC218\\uB3C4 \\uC788\\uACE0, \\uB85C\\uCEEC \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 \\uC0C1\\uD0DC\\uB97C connection\\uC5D0 \\uBC18\\uC601\\uC2DC\\uD0A4\\uACE0 \\uC2F6\\uC744 \\uC218\\uB3C4 \\uC788\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"connection\\uC758 visible slice\\uB098 window\\uAC00 \\uB2EC\\uB77C\\uC9C0\\uB294 \\uAC83\\uC744 \\uCD94\\uC801\\uD558\\uB824 \\uD560 \\uB54C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2DC\\uAC01\\uC801\\uC73C\\uB85C \\uD398\\uC774\\uC9C0\\uB97C \\uBD84\\uB9AC\\uD558\\uB824 \\uD560 \\uB54C. \\uC774 \\uB54C\\uB294 \\uAC01 \\uD398\\uC774\\uC9C0\\uC5D0 \\uC815\\uD655\\uD788 \\uC5B4\\uB5A4 \\uC544\\uC774\\uD15C\\uB4E4\\uC774 \\uB4E4\\uC5B4\\uAC00\\uC57C \\uD558\\uB294\\uC9C0\\uC5D0 \\uB300\\uD55C \\uC9C0\\uC2DD\\uC774 \\uD544\\uC694\\uD558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB3D9\\uC77C\\uD55C connection\\uC758 \\uC11C\\uB85C \\uB2E4\\uB978 \\u201C\\uB05D\\\"(\\uB9C8\\uC9C0\\uB9C9 \\uB178\\uB4DC)\\uC744 \\uD45C\\uC2DC\\uD558\\uBA74\\uC11C \\uADF8\\uB4E4 \\uC0AC\\uC774\\uC758 gap\\uC744 \\uCD94\\uC801\\uD558\\uACE0, gap \\uC0AC\\uC774\\uC758 \\uD398\\uC774\\uC9C0\\uB124\\uC774\\uC158\\uC744 \\uC218\\uD589\\uD560 \\uB54C \\uACB0\\uACFC\\uB97C \\uBCD1\\uD569\\uD560 \\uC218 \\uC788\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608\\uB97C \\uB4E4\\uC5B4, \\uAC00\\uC7A5 \\uC624\\uB798\\uB41C \\uB313\\uAE00\\uC774 \\uB9E8 \\uC704\\uC5D0 \\uD45C\\uC2DC\\uB418\\uB294 \\uB313\\uAE00 \\uBAA9\\uB85D\\uC744 \\uB80C\\uB354\\uB9C1\\uD558\\uB824 \\uD558\\uACE0, \\uB2E4\\uC74C \\uD398\\uC774\\uC9C0\\uB97C \\uB9E4\\uAE30\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uC0C1\\uD638\\uC791\\uC6A9 \\uD560 \\uC218 \\uC788\\uB294 gap\\uC774 \\uD544\\uC694\\uD558\\uB2E4.\")))), mdx(\"p\", null, \"\\uC774\\uB7F0 \\uBCF5\\uC7A1\\uD55C \\uC0AC\\uC6A9\\uC0AC\\uB840\\uB4E4\\uC744 \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD574 Relay\\uC5D0\\uC11C\\uB294 \\uAC1C\\uBC1C\\uC774 \\uACC4\\uC18D \\uC9C4\\uD589\\uC911\\uC774\\uB2E4.\"), mdx(\"h2\", null, \"Refreshing connections\"), mdx(\"h2\", null, \"Prefetching pages of a Connection\"), mdx(\"h2\", null, \"Rendering One Page of Items at a Time\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#relay-0218","title":"Relay 02/18"},{"url":"#updating-connections","title":"Updating Connections","items":[{"url":"#connection-records","title":"Connection Records","items":[{"url":"#accessing-connections-using-__id","title":"Accessing connections using __id"},{"url":"#accessing-connections-using-connectionhandlergetconnectionid","title":"Accessing connections using ConnectionHandler.getConnectionID"},{"url":"#accessing-connections-using-connectionhandlergetconnection","title":"Accessing connections using ConnectionHandler.getConnection"}]},{"url":"#adding-edges","title":"Adding edges","items":[{"url":"#using-declarative-directives","title":"Using declarative directives"}]},{"url":"#manually-adding-edges","title":"Manually adding edges"},{"url":"#removing-edges","title":"Removing edges","items":[{"url":"#using-the-declarative-deletion-directive","title":"Using the declarative deletion directive"}]},{"url":"#manually-removing-edges","title":"Manually removing edges"},{"url":"#connection-identity-with-filters","title":"Connection identity with filters"}]},{"url":"#advanced-pagination","title":"Advanced Pagination","items":[{"url":"#pagination-over-multiple-connections","title":"Pagination Over Multiple Connections"},{"url":"#bi-directional-pagination","title":"Bi-directional Pagination"},{"url":"#custom-connection-state","title":"Custom Connection State"},{"url":"#refreshing-connections","title":"Refreshing connections"},{"url":"#prefetching-pages-of-a-connection","title":"Prefetching pages of a Connection"},{"url":"#rendering-one-page-of-items-at-a-time","title":"Rendering One Page of Items at a Time"}]}]},"parent":{"relativePath":"a-guided-tour/Rendering List Data and Pagination (part 2).md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics","title":"Rendering Data Basics"}}},{"node":{"fields":{"slug":"/principles-and-architecture","title":"Principles And Architecture"}}},{"node":{"fields":{"slug":"/a-guided-tour","title":"A Guided Tour"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in GraphQL","title":"Thinking In Graph QL"}}},{"node":{"fields":{"slug":"/","title":"Relay"}}},{"node":{"fields":{"slug":"/principles-and-architecture/Thinking in Relay","title":"Thinking In Relay"}}},{"node":{"fields":{"slug":"/getting-started/Step-by-step Guide","title":"Step By Step Guide"}}},{"node":{"fields":{"slug":"/getting-started/Introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 1)","title":"Refreshing And Refetching Part 1"}}},{"node":{"fields":{"slug":"/a-guided-tour/Refreshing and Refetching (part 2)","title":"Refreshing And Refetching Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reuse Cached Data For Rendering","title":"Reuse Cached Data For Rendering"}}},{"node":{"fields":{"slug":"/a-guided-tour/Rendering List Data and Pagination (part 2)","title":"Rendering List Data And Pagination Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/Reusing Cached Data for Rendering (part 2)","title":"Reusing Cached Data For Rendering Part 2"}}},{"node":{"fields":{"slug":"/a-guided-tour/managing-data-outside-react","title":"Managing Data Outside React"}}},{"node":{"fields":{"slug":"/a-guided-tour/Updating Data","title":"Updating Data"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Queries","title":"Queries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Variables","title":"Variables"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/Fragments","title":"Fragments"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/error-states-with-error-boundaries","title":"Error States With Error Boundaries"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/relay-environment","title":"Relay Environment"}}},{"node":{"fields":{"slug":"/a-guided-tour/rendering-data-basics/loading-state-with-suspense","title":"Loading State With Suspense"}}}]}},"pageContext":{"id":"722de050-1e35-5b68-b66c-3882795e2af9"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}